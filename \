#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;

my @state;
my $N = 6;

my $moves = [generate(1), generate(0)];

for (my $i = 0; $i < $N; $i++)  {
    if (($i+1) % 2==0) {
        $state[$i]=1;
    }
    else {
        $state[$i]=0;
    }
}

print "----\n";

foreach my $i (@$moves) {
    move($i);
}


#generate(1);

sub generate
{
    my ($odd) = @_;
    my @res;

    for (my $i = 0; $i < $N; $i++)  {
        if (($i+1) % 2==$odd) {
            $state[$i]=1;
        }
        else {
            $state[$i]=0;
        }
    }

    print "   ".join(", ", @state),"\n";

    for (my $k = 0; $k < $N; $k++) {
        if ($state[$k]!=0) {
            print "Touch $k\n";
            move($k);
            push @res, $k;
        }
    }

    return @res;
}


sub move
{
    my ($current) = @_;
    $state[$current] = 0;
#    print "A: ".join(", ", @state),"\n";
    
    my @todo;

    for (my $i = 0; $i < $N; $i++)  {
        next if $state[$i] == 0;

        $state[$i]--;

        if ($i > 0) {
            push @todo, $i-1;
        }

        if ($i < $N-1) {
            push @todo, $i+1;
        }
    }

    foreach my $j (@todo) {
        $state[$j]=1;
    }

    print "B: ".join(", ", @state),"\n";
}


